@Comment А вот так оформляется библиография при помощи BibTeX.

@article{RONNOW202136,
title = {Fast analytical motion blur with transparency},
journal = {Computers Graphics},
volume = {95},
pages = {36-46},
year = {2021},
issn = {0097-8493},
doi = {https://doi.org/10.1016/j.cag.2021.01.006},
url = {https://www.sciencedirect.com/science/article/pii/S0097849321000066},
author = {Mads J.L. Ronnow and Ulf Assarsson and Marco Fratarcangeli},
keywords = {Real-time rendering, Motion blur, Parallel computing},
abstract = {We introduce a practical parallel technique to achieve real-time motion blur for textured and semi-transparent triangles with high accuracy using modern commodity GPUs. In our approach, moving triangles are represented as prisms. Each prism is bounded by the initial and final position of the triangle during one animation frame and three bilinear patches on the sides. Each prism covers a number of pixels for a certain amount of time according to its trajectory on the screen. We efficiently find, store and sort the list of prisms covering each pixel including the amount of time the pixel is covered by each prism. This information, together with the color, texture, normal, and transparency of the pixel, is used to resolve its final color. We demonstrate the performance, scalability, and generality of our approach in a number of test scenarios, showing that it achieves a visual quality practically indistinguishable from the ground truth in a matter of just a few milliseconds, including rendering of textured and transparent objects. A supplementary video has been made available online.11Supplementary video available here},
language =     "russian"
}


@article{Navarro11,
author = {Navarro, Fernando and Seron, Francisco J. and Gutierrez, Diego},
title = {Motion Blur Rendering: State of the Art},
journal = {Computer Graphics Forum},
volume = {30},
number = {1},
pages = {3-26},
keywords = {motion blur, temporal antialiasing, sampling and reconstruction, rendering, shading, visibility, analytic methods, geometric substitution, Monte Carlo sampling, postprocessing, hybrid methods, I.3.3 Computer Graphics: Picture/Image Generation—Antialiasing},
doi = {https://doi.org/10.1111/j.1467-8659.2010.01840.x},
url = {https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1467-8659.2010.01840.x},
eprint = {https://onlinelibrary.wiley.com/doi/pdf/10.1111/j.1467-8659.2010.01840.x},
abstract = {Abstract Motion blur is a fundamental cue in the perception of objects in motion. This phenomenon manifests as a visible trail along the trajectory of the object and is the result of the combination of relative motion and light integration taking place in film and electronic cameras. In this work, we analyse the mechanisms that produce motion blur in recording devices and the methods that can simulate it in computer generated images. Light integration over time is one of the most expensive processes to simulate in high-quality renders, as such, we make an in-depth review of the existing algorithms and we categorize them in the context of a formal model that highlights their differences, strengths and limitations. We finalize this report proposing a number of alternative classifications that will help the reader identify the best technique for a particular scenario.},
year = {2011},
language = "russian"
}

@article{Haeberli90,
author = {Haeberli, Paul and Akeley, Kurt},
title = {The Accumulation Buffer. Hardware Support for High-Quality Rendering},
year = {1990},
publisher = {Association for Computing Machinery},
volume = {24},
number = {4},
pages = {309–318},
url = {https://doi.org/10.1145/97880.97913},
doi = {10.1145/97880.97913},
language = "russian"
}

@book{GpuGems2008,
  title={GPU Gems 3},
  author={Nguyen, H. and NVIDIA Corporation},
  number={3},
  isbn={9780321515261},
  lccn={2007023985},
  series={Lab Companion Series},
  url={https://books.google.ru/books?id=ylNyQgAACAAJ},
  year={2008},
  publisher={Addison-Wesley},
  language = "russian"
}


@inproceedings{McGuire12,
author = {McGuire, Morgan and Hennessy, Padraic and Bukowski, Michael and Osman, Brian},
title = {A Reconstruction Filter for Plausible Motion Blur},
year = {2012},
isbn = {9781450311946},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2159616.2159639},
doi = {10.1145/2159616.2159639},
abstract = {This paper describes a novel filter for simulating motion blur phenomena in real time
by applying ideas from offline stochastic reconstruction. The filter operates as a
2D post-process on a conventional framebuffer augmented with a screen-space velocity
buffer. We demonstrate results on video game scenes rendered and reconstructed in
real-time on NVIDIA GeForce 480 and Xbox 360 platforms, and show that the same filter
can be applied to cinematic post-processing of offline-rendered images and real photographs.
The technique is fast and robust enough that we deployed it in a production game engine
used at Vicarious Visions.},
booktitle = {Proceedings of the ACM SIGGRAPH Symposium on Interactive 3D Graphics and Games},
pages = {135–142},
numpages = {8},
location = {Costa Mesa, California},
series = {I3D '12},
language =     "russian"
}


@Article{Wloka96,
author={Wloka Matthias M. and Zeleznik Robert C.},
title={Interactive real-time motion blur},
journal={The Visual Computer},
year={1996},
volume={12},
number={6},
pages={283-295},
abstract={Motion blurring of fast-moving objects is highly desirable for virtual environments and 3D user interfaces. However, all currently known algorithms for generating motion blur are too slow for inclusion in interactive 3D applications. We introduce a new motion-blur algorithm that works in three dimensions on a per object basis. The algorithm operates in real time even for complex objects consisting of several thousand polygons. While it only approximates true motion blur, the generated results are smooth and visually consistent. We achieve this performance break-through by taking advantage of hardware-assisted rendering of semitransparent polygons, a feature commonly available in today's workstations.},
issn={1432-2315},
doi={10.1007/BF01782290},
url={https://doi.org/10.1007/BF01782290},
language = "russian"
}

@book{Rogers89,
  title={Алгоритмические основы машинной графики},
  author={Роджерс, Д.Ф.},
  isbn={9785030004761},
  url={https://books.google.ru/books?id=iptuAAAACAAJ},
  year={1989},
  publisher={Мир},
  language = "russian"
}

@book{cpplang,
  title={Программирование. Принципы и практика использования С++},
  author={Страуструп, Б.},
  isbn={9785457707351},
  url={https://books.google.ru/books?id=kttwBgAAQBAJ},
  year={2011},
  publisher={ООО ИД Вильямс},
 language = "russian",
}


@manual{qt_widgets,
 url={https://doc.qt.io/qt-5/qtwidgets-index.html},
 title={Qt Widgets 5.15.5},
 urldate = {25.08.2021},
 language = "russian",
 media = {eresource}
} 


@manual{cpplint,
 url={https://github.com/cpplint/cpplint},
 title={cpplint/cpplint: Static code checker for C++},
 urldate = {25.08.2021},
 language = "russian",
 media = {eresource}
} 

@manual{cppcheck,
 url={https://cppcheck.sourceforge.io/},
 title={Cppcheck - A tool for static C/C++ code analysis},
 urldate = {25.08.2021},
 language = "russian",
 media = {eresource}
} 


@manual{valgrind,
 url={https://www.valgrind.org/},
 title={Valgrind Home},
 urldate = {25.08.2021},
 language = "russian",
 media = {eresource}
} 


@manual{googletest,
 url={https://google.github.io/googletest/},
 title={GoogleTest User’s Guide},
 urldate = {25.08.2021},
 language = "russian",
 media = {eresource}
} 
